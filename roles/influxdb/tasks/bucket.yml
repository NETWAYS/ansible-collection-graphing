---
- name: Install Influx DB 2 CLI
  package:
    name: influxdb2-cli

- name: Check bucket
  command: influx bucket list -n "{{ influxdb_bucket }}"
  register: result
  ignore_errors: yes
  changed_when: false

- name: Influx DB 2 initial setup
  command: >
    influx setup
    --org "{{ influxdb_org }}"
    --bucket "{{ influxdb_bucket }}"
    --username "{{ influxdb_user }}"
    --password "{{ influxdb_password }}"
    --host http://{{ influxdb_host }}:8086
    --retention "{{ retention }}"
    --force
  when: result.rc != 0

- name: Create authentication config
  command: >
    influx config create
    --config-name "{{ authentication_config_name }}"
    --host-url http://{{ influxdb_host }}:8086
    --org "{{ influxdb_org }}"
    --active
  args:
    creates: /root/.influxdbv2/configs

- name: Register bucket id
  shell: >
    influx bucket list
    | grep -P "\s{{ influxdb_bucket }}\s"
    | grep -Po "^\S*"
  ignore_errors: yes
  register: bucket_id
  changed_when: false

- name: list bucket id
  shell: >
    influx auth list
    | grep "{{ bucket_id.stdout}}"
  ignore_errors: yes
  register: token_list
  changed_when: false

- name: Create token fÃ¼r bucket
  shell: >
    influx auth create
    --read-bucket "{{ bucket_id.stdout }}"
    --write-bucket "{{ bucket_id.stdout }}"
    |grep -v ^ID
    | awk '{print $2}'
  register: bucket_token
  when: token_list.rc != 0

- name: Bucket mapping
  shell: >
    influx v1 dbrp create
    --db "{{ influxdb_bucket }}"
    --rp "{{ influxdb_bucket }}"
    --bucket-id "{{ bucket_id.stdout}}"
  when: (influxdb_influxql_query) and (result.rc != 0)

- name: Register token
  shell: >
    influx auth list
    | grep "{{ bucket_id.stdout}}"
    | awk '{print $2}'
  register: token_list
  changed_when: false

- name: Save token in file
  copy:
    content: "{{ token_list.stdout }}"
    dest: "{{ influxdb_token_path }}/influxdb_token_{{ bucket_id.stdout }}"
    owner: root
    group: root
    mode: '0600'
